/**********************************************************************
Description: It defines the styles of the block components forming the page. We can devide the entire page in one or
			 more blocks. Each block can have background image with or without parallax effect, a content wrapper which
			 wraps block header and content.

Dependencies: variables, variables-ext, mixins

Details: It defines the styles for header components as listed below:

* Block       - The barebone block class with minimum styles common for all the blocks. The base class can have below
*               listed options:
*                   - It can have background image with or without parallax effects.
*                   - The content wrapper wraps the block header and block content. This gives opportunity to set block
*                     background and even content wrapper background in the form of image or texture.
*                   - Height of block must not be set using min-height to get background with parallax working.
*
* Basic       - It occupy 100% width and height of it's parent. The height in % won't work in case parent's min-height
*               property is set. In such cases we need JS based solution. It works well with cmtBlock jQuery plugin provided
*               by CMT-JS framework.
***********************************************************************/

// == Structure - Block =============

.block {
	position: relative;

	// responsive background
	.block-bkg {
		@include bkg-image;
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
		z-index: 1;
	}

	// fixed background
	.block-bkg-fixed {
		@include bkg-image-fixed;
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
		z-index: 1;
	}

	// scrollable background
	.block-bkg-scroll {
		@include bkg-image-scroll;
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
		z-index: 1;
	}

	// parallax background
	.block-bkg-parallax {
		@include bkg-image;
		width: 100%;
		height: 150%;
		position: absolute;
		top: -50%;
		left: 0;
		z-index: 5;
	}

	// Texture on top of block background but under content
	> .texture {
		z-index: 10;
	}

	// Content Wrapper on top of texture
	.block-wrap-content {
		position: relative;
		z-index: 15;

		// Block Header
		.block-header {

		}

		// Block Content
		.block-content {

			// Default Content Box having title and text content
			.box-content {

				.box-content-title {
					// default content box title
				}

				.box-content-text {
				  // default content box text
				}
			}
		}

		// Block Footer
		.block-footer {

		}
	}

	// The splitter seperate a block from it's immediate successor
	.block-splitter {
		position: absolute;
		width: 100%;
		height: 100px;
		text-align: center;
		z-index: 10000;

		&.top {
			top: 0;
			margin-top: -50px;
		}

		&.bottom {
			bottom: 0;
			margin-bottom: -50px;
		}

		.icon {
			display: inline-block;
			width: 100px;
			height: 100px;
		}
	}
}

// == Basic Block ===================

.block-basic {
	position: relative;
	width: 100%;
	height: 100%;
	overflow: hidden;
}