/**********************************************************************
Description: This file define the basic and common styling used by CMT-UI css framework.

Dependencies: variables, mixins

Details: It defines the basic styles as listed below:
* Box border        - It's applied to html and all elements in order to calculate width including border and padding.
* Default Color     - The default background and text color is set to primary from the 3 Color Scheme.
* Screen            - The default classes having screen sizes using variables defined in variable file.
* Colors            - This section define the classes having appropriate background and text color following 3 Color
*                     Scheme and the standard colors.
* Margin & Padding  - These classes remove margin or padding or both. There are also classes to have pre-defined
*                     margin and padding.
* Floats            - The floating classes either clear the float, no float or add left/right float.
* Width & Height    - This section define width and height classes having predefined values in percentage.
* Alignments        - The alignment classes allows to align either the element itself or it's children.
* Height Filler     - These classes can be used to add vertical spacing.
* Tab Filler        - These classes can be used to add horizontal spacing between inline boxes.
* Positioning       - This section define the positioning classes.
* Display           - The display classes control the display property i.e. inline, block or inline block.
* Visibility        - These classes control the display property i.e. block or none. The visibility property specific
*                     classes can be used to show or hide an element keeping it's space on screen.
* Cursor            - The cursor classes.
* Disabled          - It disable an element by changing color to gray and cursor to default.
* Fluid             - The fluid class makes children occupying 100% width with auto height. Useful for responsive images.
* Message           - These classes can be used to show message according to failure, warning or success.
***********************************************************************/

/**
 * Make all box elements to follow border-box. It gives flexibility to use css width as the element width including
 * border and padding. The remaining space deducting border and padding from given width will be used by element content.
 */

html {
  -webkit-box-sizing: border-box;
	 -moz-box-sizing: border-box;
		  box-sizing: border-box;
}

*, *:before, *:after {
  -webkit-box-sizing: inherit;
	 -moz-box-sizing: inherit;
		  box-sizing: inherit;
}

// The primary color will be used as default color for document body and text.

html, body {
	background-color: $color-primary;
	color: $color-primary-text;
}

/**
 * Screen Resolutions - The large number of device resolutions and to serve content decorated specific to these devices is
 * a tedius task without going responsive. CMGTools have used the most commonly used standard resolutions to cover maximum screens.
 */

.screen {

	&.screen-mobile-small {
		width: $screen-mobile-small;
	}

	&.screen-mobile-large {
		width: $screen-mobile-large;
	}

	&.screen-tablet-small {
		width: $screen-tablet-small;
	}

	&.screen-tablet-large {
		width: $screen-tablet-large;
	}

	&.screen-desktop-small {
		width: $screen-desktop-small;
	}

	&.screen-desktop-medium {
		width: $screen-desktop-medium;
	}

	&.screen-desktop-large {
		width: $screen-desktop-large;
	}

	&.screen-desktop-xlarge {
		width: $screen-desktop-xlarge;
	}
}

/**
 * Coloring - It is one of the most important factor while designing website following a theme approach. CMGTools have taken extra care in
 * this area and tried to manage colors by dividing them into 3 major variations forming a standard color palette. The primary color is dominating
 * for the entire design and secondary is contrary to primary to be used for components. The tertiary color can also be used apart from secondary.
 */

.color {
	// default to primary
	background-color: $color-primary;
	color: $color-primary-text;
/**
 * Color Palatte:
 * 1. primary: #{$color-primary}
 * 2. primary text: #{$color-primary-text}
 * 3. primary light: #{$color-primary-l}
 * 4. primary text light: #{$color-primary-text-l}
 * 5. primary dark: #{$color-primary-d}
 * 6. primary text dark: #{$color-primary-text-d}
 * 7. secondary: #{$color-secondary}
 * 8. secondary text: #{$color-secondary-text}
 * 9. secondary light: #{$color-secondary-l}
 * 10. secondary text light: #{$color-secondary-text-l}
 * 11. secondary dark: #{$color-secondary-d}
 * 12. secondary text dark: #{$color-secondary-text-d}
 * 13. tertiary: #{$color-tertiary}
 * 14. tertiary text: #{$color-tertiary-text}
 * 15. tertiary light: #{$color-tertiary-l}
 * 16. tertiary text light: #{$color-tertiary-text-l}
 * 17. tertiary dark: #{$color-tertiary-d}
 * 18. tertiary text dark: #{$color-tertiary-text-d}
 */

	&.color-primary-l {
		background-color: $color-primary-l;
		color: $color-primary-text-l;
	}

	&.color-primary-d {
		background-color: $color-primary-d;
		color: $color-primary-text-d;
	}

	&.color-secondary {
		background-color: $color-secondary;
		color: $color-secondary-text;
	}

	&.color-secondary-l {
		background-color: $color-secondary-l;
		color: $color-secondary-text-l;
	}

	&.color-secondary-d {
		background-color: $color-secondary-d;
		color: $color-secondary-text-d;
	}

	&.color-tertiary {
		background-color: $color-tertiary;
		color: $color-tertiary-text;
	}

	&.color-tertiary-l {
		background-color: $color-tertiary-l;
		color: $color-tertiary-text-l;
	}

	&.color-tertiary-d {
		background-color: $color-tertiary-d;
		color: $color-tertiary-text-d;
	}

	&.color-white {
		background-color: $color-white;
		color: $color-black;
	}

	&.color-black {
		background-color: $color-black;
		color: $color-white;
	}
}

// Background Colors
.bkg {
	// default to primary
	background-color: $color-primary !important;

	&.bkg-primary-l {
		background-color: $color-primary-l !important;
	}

	&.bkg-primary-d {
		background-color: $color-primary-d !important;
	}

	&.bkg-secondary {
		background-color: $color-secondary !important;
	}

	&.bkg-secondary-l {
		background-color: $color-secondary-l !important;
	}

	&.bkg-secondary-d {
		background-color: $color-secondary-d !important;
	}

	&.bkg-tertiary {
		background-color: $color-tertiary !important;
	}

	&.bkg-tertiary-l {
		background-color: $color-tertiary-l !important;
	}

	&.bkg-tertiary-d {
		background-color: $color-tertiary-d !important;
	}

	&.bkg-black {
		background-color: $color-black !important;
	}

	&.bkg-gray {
		background-color: $color-gray !important;
	}

	&.bkg-gray-l {
		background-color: $color-gray-l !important;
	}

	&.bkg-gray-d {
		background-color: $color-gray-d !important;
	}

	&.bkg-white {
		background-color: $color-white !important;
	}

	&.bkg-blue {
		background-color: $color-blue !important;
	}

	&.bkg-purple {
		background-color: $color-purple !important;
	}

	&.bkg-orange {
		background-color: $color-orange !important;
	}

	&.bkg-yellow {
		background-color: $color-yellow !important;
	}

	&.bkg-red {
		background-color: $color-red !important;
	}

	&.bkg-pink {
		background-color: $color-pink !important;
	}

	&.bkg-magenta {
		background-color: $color-magenta !important;
	}

	&.bkg-green {
		background-color: $color-green !important;
	}

	&.bkg-green-d {
		background-color: $color-green-d !important;
	}
}

// Text Colors
.text {
	// default to primary text
	color: $color-primary-text !important;

	&.text-primary-l {
		color: $color-primary-text-l !important;
	}

	&.text-primary-d {
		color: $color-primary-text-d !important;
	}

	&.text-secondary {
		color: $color-secondary-text !important;
	}

	&.text-secondary-l {
		color: $color-secondary-text-l !important;
	}

	&.text-secondary-d {
		color: $color-secondary-text-d !important;
	}

	&.text-tertiary {
		color: $color-tertiary-text !important;
	}

	&.text-tertiary-l {
		color: $color-tertiary-text-l !important;
	}

	&.text-tertiary-d {
		color: $color-tertiary-text-d !important;
	}

	&.text-link {
		color: $color-link !important;
	}

	&.text-black {
		color: $color-black !important;
	}

	&.text-gray {
		color: $color-gray !important;
	}

	&.text-gray-l {
		color: $color-gray-l !important;
	}

	&.text-gray-d {
		color: $color-gray-d !important;
	}

	&.text-white {
		color: $color-white !important;
	}

	&.text-blue {
		color: $color-blue !important;
	}

	&.text-purple {
		color: $color-purple !important;
	}

	&.text-orange {
		color: $color-orange !important;
	}

	&.text-yellow {
		color: $color-yellow !important;
	}

	&.text-red {
		color: $color-red !important;
	}

	&.text-pink {
		color: $color-pink !important;
	}

	&.text-magenta {
		color: $color-magenta !important;
	}

	&.text-green {
		color: $color-green !important;
	}

	&.text-green-d {
		color: $color-green-d !important;
	}
}

// without margin and padding
.mp {

	.mp-none {
		margin: 0 !important;
		padding: 0 !important;
	}

	.mp-none-top {
		margin-top: 0 !important;
		padding-top: 0 !important;
	}

	.mp-none-right {
		margin-right: 0 !important;
		padding-right: 0 !important;
	}

	.mp-none-bottom {
		margin-bottom: 0 !important;
		padding-bottom: 0 !important;
	}

	.mp-none-left {
		margin-left: 0 !important;
		padding-left: 0 !important;
	}
}

// Padding

.padding {

	.padding-none {
		padding: 0 !important;
	}

	.padding-none-top {
		padding-top: 0 !important;
	}

	.padding-none-right {
		padding-right: 0 !important;
	}

	.padding-none-bottom {
		padding-bottom: 0 !important;
	}

	.padding-none-left {
		padding-left: 0 !important;
	}

	&.padding-default {
		padding: $size-default-rem;
	}

	&.padding-default-v {
		padding-top: $size-default-rem;
		padding-bottom: $size-default-rem;
	}

	&.padding-default-h {
		padding-left: $size-default-rem;
		padding-right: $size-default-rem;
	}

	&.padding-small {
		padding: $size-small-rem;
	}

	&.padding-small-v {
		padding-top: $size-small-rem;
		padding-bottom: $size-small-rem;
	}

	&.padding-small-h {
		padding-left: $size-small-rem;
		padding-right: $size-small-rem;
	}

	&.padding-medium {
		padding: $size-medium-rem;
	}

	&.padding-medium-v {
		padding-top: $size-medium-rem;
		padding-bottom: $size-medium-rem;
	}

	&.padding-medium-h {
		padding-left: $size-medium-rem;
		padding-right: $size-medium-rem;
	}

	&.padding-large {
		padding: $size-large-rem;
	}

	&.padding-large-v {
		padding-top: $size-large-rem;
		padding-bottom: $size-large-rem;
	}

	&.padding-large-h {
		padding-left: $size-large-rem;
		padding-right: $size-large-rem;
	}

	&.padding-xlarge {
		padding: $size-xlarge-rem;
	}

	&.padding-xlarge-v {
		padding-top: $size-xlarge-rem;
		padding-bottom: $size-xlarge-rem;
	}

	&.padding-xlarge-h {
		padding-left: $size-xlarge-rem;
		padding-right: $size-xlarge-rem;
	}
}

// Margin

.margin {

	.margin-none {
		margin: 0 !important;
	}

	.margin-none-top {
		margin-top: 0 !important;
	}

	.margin-none-right {
		margin-right: 0 !important;
	}

	.margin-none-bottom {
		margin-bottom: 0 !important;
	}

	.margin-none-left {
		margin-left: 0 !important;
	}

	&.margin-default {
		margin: $size-default-rem;
	}

	&.margin-default-v {
		margin-top: $size-default-rem;
		margin-bottom: $size-default-rem;
	}

	&.margin-default-h {
		margin-left: $size-default-rem;
		margin-right: $size-default-rem;
	}

	&.margin-small {
		margin: $size-small-rem;
	}

	&.margin-small-v {
		margin-top: $size-small-rem;
		margin-bottom: $size-small-rem;
	}

	&.margin-small-h {
		margin-left: $size-small-rem;
		margin-right: $size-small-rem;
	}

	&.margin-medium {
		margin: $size-medium-rem;
	}

	&.margin-medium-v {
		margin-top: $size-medium-rem;
		margin-bottom: $size-medium-rem;
	}

	&.margin-medium-h {
		margin-left: $size-medium-rem;
		margin-right: $size-medium-rem;
	}

	&.margin-large {
		margin: $size-large-rem;
	}

	&.margin-large-v {
		margin-top: $size-large-rem;
		margin-bottom: $size-large-rem;
	}

	&.margin-large-h {
		margin-left: $size-large-rem;
		margin-right: $size-large-rem;
	}

	&.margin-xlarge {
		margin: $size-xlarge-rem;
	}

	&.margin-xlarge-v {
		margin-top: $size-xlarge-rem;
		margin-bottom: $size-xlarge-rem;
	}

	&.margin-xlarge-h {
		margin-left: $size-xlarge-rem;
		margin-right: $size-xlarge-rem;
	}
}

/**
 * Floating Blocks - These classes can be used to clear or float the elements.
 */

.clear {
	clear: both !important;
}

.left {
	float: left !important;
}

.right {
	float: right !important;
}

.clear-none {
	clear: none !important;
}

.float-none {
	float: none !important;
}

.float-none-center {
	float: none !important;
	margin: 0 auto;
}

/**
 * Pre-defined width and height, handy at few places.
 */

// Width

.width {
	width: 100%;

	&.width-auto {
		width: auto;
	}

	&.width-1 {
		width: 1%;
	}

	&.width-5 {
		width: 5%;
	}

	&.width-10 {
		width: 10%;
	}

	&.width-25 {
		width: 25%;
	}

	&.width-50 {
		width: 50%;
	}

	&.width-75 {
		width: 75%;
	}

	&.width-80 {
		width: 80%;
	}
}

// Height

.height {
	height: 100%;

	&.height-auto {
		height: auto;
	}

	&.height-25 {
		height: 25%;
	}

	&.height-50 {
		height: 50%;
	}

	&.height-75 {
		height: 75%;
	}
}

/**
 * Alignments for centered box and text.
 */

// Horizontally center align the element
.center {
	margin: 0 auto;
}

// Align the children of an element - left, horizontally center and right
.align {
	text-align: left !important;

	&.align-center {
		text-align: center !important;
	}

	&.align-right {
		text-align: right !important;
	}
}

/**
 * Height fillers to seperate boxes.
 */

.filler-height {
	height: 1rem;

	&.filler-height-small {
		height: 1.5rem;
	}

	&.filler-height-medium {
		height: 2rem;
	}

	&.filler-height-large {
		height: 2.5rem;
	}

	&.filler-height-xlarge {
		height: 3rem;
	}
}

/**
 * Tab fillers to seperate elements.
 */
.filler-tab {
	width: 1em;
	height: 1px;
	display: inline-block;

	&.filler-tab-small {
		width: 2em;
	}

	&.filler-tab-medium {
		width: 4em;
	}

	&.filler-tab-large {
		width: 8em;
	}

	&.filler-tab-xlarge {
		width: 10em;
	}
}

// Positioning

.absolute {
	position: absolute !important;

	// Horizontally center
	&.absolute-center {
		left: 0;
		right: 0;
		margin-left: auto;
		margin-right: auto;
	}

	// Vertically center - both parent and child needs fixed width and height
	&.absolute-middle {
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		margin-left: auto;
		margin-right: auto;
	}

	&.absolute-top-left {
		top: 0px;
		left: 0px;
	}

	// Horizontally center at top - child needs fixed width smaller than parent
	&.absolute-top-center {
		top: 0px;
		left: 0px;
		right: 0px;
	}

	&.absolute-top-right {
		top: 0px;
		right: 0px;
	}

	&.absolute-bottom-left {
		bottom: 0px;
		left: 0px;
	}

	// Horizontally center at bottom - child needs fixed width smaller than parent
	&.absolute-bottom-center {
		bottom: 0px;
		left: 0px;
		right: 0px;
	}

	&.absolute-bottom-right {
		bottom: 0px;
		right: 0px;
	}
}

.relative {
	position: relative !important;
}

.fixed {
	position: fixed !important;
}

// Display Type

.block {
	display: block !important;
}

.inline-block {
	display: inline-block !important;
}

.inline {
	display: inline !important;
}

// Visibility - Without own space

.visible {
	display: block !important;
}

// Strictly hidden
.hidden {
	display: none !important;
}

.hidden-easy {
	display: none;
}

// Visibility - Hidden/Displayed occupying space on screen

.visible-space {
	visibility: visible !important;
}

.hidden-space {
	visibility: hidden !important;
}

// Cursors

.pointer {
	cursor: pointer;
}

.crosshair {
	cursor: crosshair;
}

.help {
	cursor: help;
}

.wait {
	cursor: wait;
}

.cursor {
	cursor: default;

	&.cursor-pointer {
		cursor: pointer;
	}

	&.cursor-crosshair {
		cursor: crosshair;
	}

	&.cursor-help {
		cursor: help;
	}

	&.cursor-wait {
		cursor: wait;
	}
}

// Disabled
.disabled {
	background-color: $color-gray !important;
	color: $color-white !important;
	cursor: default !important;

	&:hover {
		background-color: $color-gray !important;
		color: $color-white !important;
	}
}

// Fluid Elements (blocks, images)

.fluid {
	max-width: 100%;
	height: auto;
}

// Messages

.warning, .error, .success, .info, .help-block {
	font-size: $font-size-8;
	width: 100%;

	&.highlight {
		background-color: $color-secondary;
	}
}

.error {
	color: $color-error;
}

.warning {
	color: $color-warning;
}

.success {
	color: $color-success;
}

.info {
	color: $color-info;
}

// Required for Yii Forms
.form-group .help-block {
	color: $color-error;
}

.error-field {
	@include border( $size-default, solid, $color-error );
	@include shadow( $size-default, $size-default, $size-medium, rgba( $color-error, $color-transparent-low ) );
}

// icons alignment
.cmti, .fa {
	vertical-align: middle;
}
