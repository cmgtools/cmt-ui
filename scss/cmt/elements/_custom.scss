/**********************************************************************
Description: The custom elements for CMGTools.
Dependencies: variables, mixins, transitions, transformation
***********************************************************************/

// Custom Select
.cmt-select-wrap {
    margin: 0.25em 0;
    width: 100%;

    select {
        display: none;
    }

    .cmt-select {
        position: relative;
        background-color: $color-field;

        // Select Value - default icon having width 32px. It can be changed based on icon dimensions.
        .cmt-selected {
            cursor: pointer;
            position: relative;
            z-index: 100000;
            padding-right: 1.5em;

            // text for selected value
            .s-text {
                display: inline-block;
                width: 100%;
                overflow: hidden;
                text-align: left;
                padding: 0.25em;
                color: $color-field-text;
            }

            // icon for select box
            .s-icon {
                position: absolute;
                top: 0;
                right: 0;
                display: inline-block;
                padding: 0.25em;
            }

            // disabled
            &.disabled {
                cursor: default;
            }
        }

        // Select options
        .cmt-select-list {
            position: absolute;
            width: 100%;
            background-color: $color-field;
            z-index: 100001;
            max-height: 180px;
            overflow-y: auto;            

            li {
                width: 100%;
                overflow: hidden;
                cursor: pointer;
                padding: 10px;
                background-color: $color-white;
            }

            li:hover {
                color: $color-btn-a-text;
                background-color: $color-btn;
            }
        }
    }
}

//Choices - radio and checkbox
.cmt-choice, .cmt-rating {

    input[type=checkbox], input[type=radio] {
        cursor: pointer;
        display: none;         
    }

    input[type=checkbox]+.label.pad-label::before, input[type=radio]+.label.pad-label::before {
        margin-right: 8px;
    }
 
    input[type=radio]+.label::before, input[type=checkbox]+.label::before { 
        font-family: "cmti-core";
        font-weight: normal;
        color: gray; 
        border-radius: 16px;
        display: inline-block;
        vertical-align: middle;
        margin-top: -5px;
        line-height: 13px;
    }

    input[type=checkbox]:checked,input[type=radio]:checked, input[type=checkbox]:focus,input[type=radio]:focus {
        outline:none !important;
    }

    input[type=checkbox]:checked+.label::before, input[type=radio]:checked+.label::before {
        display: inline-block; 
        background-color: #F5F8FC;
        color: $color-btn; 
    }

    input[type=checkbox]:checked+.label, input[type=radio]:checked+.label {
        color: $color-btn-a;
    }

    input[type=checkbox]:hover+.label::before, input[type=radio]:hover+.label::before, input[type=checkbox]+.label:hover::before, input[type=radio]+.label:hover::before {
        color: $color-btn-h;
    }

    input[type=checkbox]:disabled+.label::before, input[type=radio]:disabled+.label::before {
        background-color: #DDD !important;
        color: #BBB;
    }

    input[type=radio]+.label::before, input[type=radio]:disabled+.label::before {
        content: "\e0a2";
    }

    input[type=radio]:checked+.label::before {
        content: "\e0a3";
    }

    input[type=checkbox]+.label::before, input[type=checkbox]:disabled+.label::before {
        content: "\3b";
    }

    input[type=checkbox]:checked+.label::before {
        content: "\3a";
    }
}

.cmt-rating {

    input[type=checkbox]+.label.label-rating::before, input[type=radio]+.label.label-rating::before {
        margin-right: 8px;
    }

    input[type=radio]+.label::before, input[type=radio]:disabled+.label::before {
        content: "\e0f3";
    }

    input[type=radio]:checked+.label::before {
        content: "\e0f3";
    }
}

// Toggle Buttons / Switches
// Reference: http://callmenick.com/post/css-toggle-switch-examples
.cmt-switch {
    position: relative;
    display: inline-block;

    .cmt-toggle {
        position: absolute;
        margin-left: -9999px;
        visibility: hidden;
    }

    .cmt-toggle + label {
        display: inline-block;
        position: relative;
        cursor: pointer;
        outline: none;
        user-select: none;
    }

    .cmt-toggle-round + label {
        width: 5em !important;
        height: 1.5em;
        padding: 0.5em;
        background-color: $color-primary-d;
        border-radius: 0.5em;
    }

    .cmt-toggle-round + label:before,
    .cmt-toggle-round + label:after {
      display: inline-block;
      position: absolute;
      top: 1px;
      left: 1px;
      bottom: 1px;
      content: "";
    }

    .cmt-toggle-round + label:before {
        right: 1px;
        background-color: $color-white;
        border-radius: 0.5em;
        @include transit-bkg-color( $transit-eio, $transit-time-medium );
    }

    .cmt-toggle-round + label:after {
        width: 1.5em;
        background-color: $color-blue;
        border-radius: 0.5em;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
        @include transit-margin( $transit-eio, $transit-time-medium );
    }

    .cmt-toggle-round:checked + label:before {
        background-color: $color-green;
    }

    .cmt-toggle-round:checked + label:after {
        margin-left: 3.5em;
    }
}

// Generic button

.btn {
    @extend %element-style;
    @extend %element-style-action;

    &.btn-25 {
        width: 25% !important;
    }

    &.btn-50 {
        width: 50% !important;
    }

    &.btn-75 {
        width: 75% !important;
    }

    &.btn-small {
        width: 80px !important;
    }

    &.btn-medium {
        width: 120px !important;
    }

    &.btn-large {
        width: 180px !important;
    }

    &.btn-xlarge {
        width: 250px !important;
    }

    // White button with dark gray hover
    &.btn-white {
        background-color: $color-white;
        color: $color-black;

        &:hover {
            background-color: $color-gray-d;
            color: $color-gray-l;
        }
    }
    
    // Black button with dark gray hover
    &.btn-black {
        background-color: $color-black;
        color: $color-white;

        &:hover {
            background-color: $color-gray-d;
            color: $color-gray-l;
        }
    }
    
    // Gray button with dark gray hover
    &.btn-gray {
        background-color: $color-gray;
        color: $color-white;

        &:hover {
            background-color: $color-gray-d;
            color: $color-gray-l;
        }
    }

    // Reversed hover of button color and text for white, black and gray buttons
    &.btn-reverse {

        &:hover {
            background-color: $color-btn !important;
            color: $color-btn-text !important;
        }
    }
}

// parents having the delete button must use positioning
.btn-delete {
    position: absolute;
    top: -0.5em;
    right: -0.5em;
    font-size: 1.25em;
    color: $color-btn;
    cursor: pointer;
    @include transit-color( $transit-eio, $transit-time-small );

    &:hover {
        color: $color-primary-text;
    }
}

.list-radio {

    label {
        width: auto;
        clear: none;
    }
}

// Customisation for forms --------------------------

.cmt-checkbox, .cmt-switch {
    @extend %element-style;
    @extend %element-style-field;
}

.cmt-checkbox, .cmt-switch {
    background: none;

    &:hover {
        background: none;
        color: $color-field-h-text;
    }
}

// Ignore 100% width behavior for form elements

.frm-ignore-100 {

    .cmt-checkbox, .cmt-switch {
        width: auto;
    }
}

.frm-split-40-60 .cmt-checkbox, .frm-split-40-60 .list-radio, .frm-split-40-60 .cmt-switch, .frm-split-40-60 .cmt-select-wrap {
    width: 60%;
    float: left;
}

.element-60 .cmt-checkbox, .element-60 .cmt-select-wrap  {
    width: 100%;
}

// Round cornered elements

.frm-rounded-all .btn {
      @include rounded( $size-medium );
}

.frm-rounded-top .btn {
      @include rounded-top( $size-medium );
}

.frm-rounded-right .btn {
      @include rounded-right( $size-medium );
}

.frm-rounded-bottom .btn {
      @include rounded-bottom( $size-medium );
}

.frm-rounded-left .btn {
      @include rounded-left( $size-medium );
}

/** Iconified Elements - Works in presence of CMGTools IconLib. It can be overriden to use any preferred icon font library. */

.frm-icon-element {

    .btn {
        padding-left: 1.75em;
    }
}

.frm-split-40-60 .frm-icon-element {

    .btn {
        float: none;
    }
}